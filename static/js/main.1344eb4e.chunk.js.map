{"version":3,"sources":["components/Button/Button.jsx","components/GoodsList/GoodsList.jsx","App.js","index.js"],"names":["Button","React","memo","onClick","text","type","propTypes","PropTypes","func","isRequired","string","GoodsList","state","isReversed","sortBy","reverse","setState","value","reset","currentGoods","this","props","goods","sort","goodA","goodB","length","localeCompare","map","good","key","PureComponent","goodsFromServer","App","listIsVisible","showList","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGaA,EAASC,IAAMC,MAAK,gBAAGC,EAAH,EAAGA,QAASC,EAAZ,EAAYA,KAAZ,OAC/B,4BACEC,KAAK,SACLF,QAASA,GAERC,MAILJ,EAAOM,UAAY,CACjBH,QAASI,IAAUC,KAAKC,WACxBL,KAAMG,IAAUG,OAAOD,Y,WCVZE,EAAb,4MACEC,MAAQ,CACNC,YAAY,EACZC,OAAQ,MAHZ,EAMEC,QAAU,WACR,EAAKC,UAAS,SAAAJ,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBARzB,EAYEC,OAAS,SAACG,GACR,EAAKD,SAAS,CACZF,OAAQG,KAdd,EAkBEC,MAAQ,WACN,EAAKF,UAAS,SAAAJ,GAAK,MAAK,CACtBE,OAAQ,KACRD,YAAY,OArBlB,4CAyBE,WAAU,IAAD,OACDM,EAAY,YAAOC,KAAKC,MAAMC,OAmBpC,OAjBAH,EAAaI,MAAK,SAACC,EAAOC,GACxB,OAAQ,EAAKb,MAAME,QACjB,IAAK,SACH,OAAOU,EAAME,OAASD,EAAMC,OAE9B,IAAK,WACH,OAAOF,EAAMG,cAAcF,GAE7B,QACE,OAAO,MAITL,KAAKR,MAAMC,YACbM,EAAaJ,UAIb,oCACE,0CACA,4BACGI,EAAaS,KAAI,SAAAC,GAAI,OACpB,wBAAIC,IAAKD,GACNA,OAKP,kBAAC7B,EAAD,CACEG,QAASiB,KAAKL,QACdX,KAAK,YAGP,kBAACJ,EAAD,CACEG,QAAS,kBAAM,EAAKW,OAAO,aAC3BV,KAAK,wBAGP,kBAACJ,EAAD,CACEG,QAASiB,KAAKF,MACdd,KAAK,UAGP,kBAACJ,EAAD,CACEG,QAAS,kBAAM,EAAKW,OAAO,WAC3BV,KAAK,wBAzEf,GAA+BH,IAAM8B,eCC/BC,EAAkB,CACtB,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UA0BaC,E,4MAtBbrB,MAAQ,CACNsB,eAAe,G,EAGjBC,SAAW,WACT,EAAKnB,UAAS,SAAAJ,GAAK,MAAK,CACtBsB,eAAgBtB,EAAMsB,mB,4CAI1B,WACE,OAAOd,KAAKR,MAAMsB,cAChB,kBAAC,EAAD,CAAWZ,MAAOU,IAElB,kBAAChC,EAAD,CACEG,QAASiB,KAAKe,SACd/B,KAAK,c,GAjBKH,IAAMmC,WCdxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.1344eb4e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nexport const Button = React.memo(({ onClick, text }) => (\n  <button\n    type=\"button\"\n    onClick={onClick}\n  >\n    {text}\n  </button>\n));\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  text: PropTypes.string.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '../Button';\n\nexport class GoodsList extends React.PureComponent {\n  state = {\n    isReversed: false,\n    sortBy: null,\n  }\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  }\n\n  sortBy = (value) => {\n    this.setState({\n      sortBy: value,\n    });\n  }\n\n  reset = () => {\n    this.setState(state => ({\n      sortBy: null,\n      isReversed: false,\n    }));\n  }\n\n  render() {\n    const currentGoods = [...this.props.goods];\n\n    currentGoods.sort((goodA, goodB) => {\n      switch (this.state.sortBy) {\n        case 'length':\n          return goodA.length - goodB.length;\n\n        case 'alphabet':\n          return goodA.localeCompare(goodB);\n\n        default:\n          return 0;\n      }\n    });\n\n    if (this.state.isReversed) {\n      currentGoods.reverse();\n    }\n\n    return (\n      <>\n        <h1>GoodsList:</h1>\n        <ul>\n          {currentGoods.map(good => (\n            <li key={good}>\n              {good}\n            </li>\n          ))}\n        </ul>\n\n        <Button\n          onClick={this.reverse}\n          text=\"Reverse\"\n        />\n\n        <Button\n          onClick={() => this.sortBy('alphabet')}\n          text=\"Sort alphabetically\"\n        />\n\n        <Button\n          onClick={this.reset}\n          text=\"Reset\"\n        />\n\n        <Button\n          onClick={() => this.sortBy('length')}\n          text=\"Sort by length\"\n        />\n      </>\n    );\n  }\n}\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n","import React from 'react';\nimport './App.css';\nimport { Button } from './components/Button';\nimport { GoodsList } from './components/GoodsList';\n\nconst goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nclass App extends React.Component {\n  state = {\n    listIsVisible: false,\n  }\n\n  showList = () => {\n    this.setState(state => ({\n      listIsVisible: !state.listIsVisible,\n    }));\n  }\n\n  render() {\n    return this.state.listIsVisible ? (\n      <GoodsList goods={goodsFromServer} />\n    ) : (\n      <Button\n        onClick={this.showList}\n        text=\"Start\"\n      />\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}